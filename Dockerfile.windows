# backend/Dockerfile.windows
# Windows-compatible Dockerfile for PDF processing

# Use Ubuntu base for better Windows compatibility
FROM node:18-bullseye

# Install system dependencies for PDF processing
RUN apt-get update && apt-get install -y \
    poppler-utils \
    tesseract-ocr \
    tesseract-ocr-eng \
    imagemagick \
    ghostscript \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /usr/src/app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Create non-root user
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs

# Change ownership of the app directory
RUN chown -R nodejs:nodejs /usr/src/app

# Create necessary directories for PDF processing
RUN mkdir -p /tmp/pdf-processing /tmp/images && \
    chown -R nodejs:nodejs /tmp/pdf-processing /tmp/images

USER nodejs

# Expose port
EXPOSE 3001

# Health check to ensure PDF tools are available
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node -e "const { execSync } = require('child_process'); try { execSync('pdftoppm -v', { stdio: 'ignore' }); execSync('tesseract --version', { stdio: 'ignore' }); process.exit(0); } catch (e) { console.error('PDF processing tools not available:', e.message); process.exit(1); }" || exit 1

# Start the application
CMD ["npm", "start"]
